UCEP %>% filter(phq_score >2) %>% ggplot( aes(x = phq_score, y = duration_min)) + geom_point()
UCEP %>% filter(phq_score >2) %>% ggplot( aes(x = phq_score, y = duration_min)) + geom_point()
UCEP %>% filter(phq_score >2) %>% ggplot( aes(x = phq_score, y = duration_min)) + geom_point()
UCEP %>% filter(phq_score >=0) %>% ggplot( aes(x = phq_score, y = duration_min)) + geom_point()
tibble(UCEP,phq_score)
UCEP %>% tibble(phq_score)
UCEP %>%
summarize_all(n_distinct)
hq_score >=0) %>%
summarize_all(n_distinct)
UCEP %>% filter(phq_score >=0) %>%   summarize_all(n_distinct)
UCEP %>% filter(phq_score >=0) %>% ggplot( aes(x = phq_score, y = duration_min)) + geom_freqpoly()
UCEP %>% filter(phq_score >=0) %>% ggplot( aes(x = phq_score)) + geom_freqpoly()
UCEP %>% filter(phq_score >=0) %>% ggplot( aes(x = phq_score)) + geom_histogram()
UCEP %>% filter(phq_score >=0) %>% ggplot( aes(x = phq_score)) + geom_histogram(binwidth = 1)
names()
names(UCEP)
names(s*)
names(s)
summary(UCEP$key_mini)
key_mini
UCEP$key_mini
names
names()
names(UCEP)
summarise(wage_main)
UCEP %>% summarise(wage_main)
summary(wage_main)
UCEP %>% summary(wage_main)
d <- UCEP %>% summary(wage_main)
d <- UCEP %>% summary(wage_main)
table(wage_main)
UCEP %>% table(wage_main)
UCEP %>% table(phq_score
d
table(UCEP,phq_score)
?table
UCEP %>% table(phq_score)
summary(wage_main)
UCEP %>% filter(phq_score >=0) %>% ggplot( aes(x = phq_score)) + geom_histogram(binwidth = 1)
UCEP %>% summarise(wage_main)
UCEP %>% filter(wage_main[isna(UCEP$wage_main)]) summarise(wage_main)
UCEP %>% filter(wage_main[is.na(UCEP$wage_main)]) summarise(wage_main)
UCEP %>% filter(wage_main[is.na(wage_main)]) summarise(wage_main)
UCEP %>% filter(wage_main[is.na]) summarise(wage_main)
UCEP %>% lm(phq_score ~ wage_main)
summarize(wage_main)
UCEP %>% summarize(wage_main)
UCEP %>% summary(wage_main)
UCEP %>% table(phq_score)
UCEP %>% lm(phq_score ~ wage_main)
lm(phq_score ~ wage_main, data = UCEP)
reg1 <- lm(phq_score ~ wage_main, data = UCEP)
summary(reg1)
lm(phq_score ~ wage_main, data = UCEP)
glimpse(UCEP)
raw_df %>% summarize(
mean = mean(wage_main),
sd = sd(wage_main))
UCEP %>% summarize(
mean = mean(wage_main),
sd = sd(wage_main))
UCEP%>%
group_by(phq_score)%>%
summarize(n=n())%>%
kable()
library(ggplot2)
library(dplyr)
library(tidyr)
library(knitr) #for printing html-friendly tables.
UCEP%>%
group_by(phq_score)%>%
summarize(n=n())%>%
kable()
Let's start by plotting the June temperature anomalies.
```{r}
plot(tempCO2data$Jun, type = "l", col = "blue", lwd = 2,
ylab = "June temperature anomalies", xlab = "Year")
title("June temperature anomalies and CO2 emissions")
```
Typically, when using the `plot` function we would now only need to add the line for the second variable using the `lines` command. The issue, however, is that the CO<sub>2</sub> emissions variable (`Trend`) is on a different scale, and the automatic vertical axis scale (from â€“0.2 to about 1.2) would not allow for the display of `Trend`. To resolve this issue you can introduce a second vertical axis using the commands below. (*Tip:* You are unlikely to remember the exact commands required, however you can Google 'R plot 2 vertical axes' or a similar search term, and then adjust the code you find so it will work on your dataset.)
```{r}
# Create extra margins used for the second axis
par(mar = c(5, 5, 2, 5))
plot(tempCO2data$Jun, type = "l", col = "blue", lwd = 2,
ylab = "June temperature anomalies", xlab = "Year")
title("June temperature anomalies and CO2 emissions")
# This puts the next plot into the same picture.
par(new = T)
# No axis, no labels
plot(tempCO2data$Trend, pch = 16, lwd = 2,
axes = FALSE, xlab = NA, ylab = NA, cex = 1.2)
axis(side = 4)
mtext(side = 4, line = 3, 'CO2 emissions')
legend("topleft", legend = c("June temp anom", "CO2 emis"),
lty = c(1, 1), col = c("blue", "black"), lwd = 2)
```
This line graph not only shows how the two variables move together in general, but also clearly demonstrates that both variables display a clear upward trend over the sample period. This is an important feature of many (not all) time series variables, and is important for the interpretation (see the 'Find out more' box on spurious correlations that follows).
[End of walk-through]
plot(cars)
setwd("YOURFILEPATH")
plot(cars)
setwd("~/Downloads")
tempdata <- read.csv("NH.Ts+dSST.csv",
skip = 1, na.strings = "***")
head(tempdata)
str(tempdata)
tempdata$Jan <- ts(tempdata$Jan,
start = c(1880), end = c(2017), frequency = 1)
tempdata$Jan <- ts(tempdata$Jan,
start = c(1880), end = c(2017), frequency = 1)
tempdata
tempdata$Jan <- ts(tempdata$Jan,
start = c(1880), end = c(2020), frequency = 1)
tempdata$DJF <- ts(tempdata$DJF,
start = c(1880), end = c(2020), frequency = 1)
tempdata$MAM <- ts(tempdata$MAM,
start = c(1880), end = c(2020), frequency = 1)
tempdata$JJA <- ts(tempdata$JJA,
start = c(1880), end = c(2020), frequency = 1)
tempdata$SON <- ts(tempdata$SON,
start = c(1880), end = c(2020), frequency = 1)
tempdata$J.D <- ts(tempdata$J.D,
start = c(1880), end = c(2020), frequency = 1)
# Set line width and colour
plot(tempdata$Jan, type = "l", col = "blue", lwd = 2,
ylab = "Annual temperature anomalies", xlab = "Year")
# Add a title
title("Average temperature anomaly in January in the northern hemisphere (1880-2016)")
# Add a horizontal line (at y = 0)
abline(h = 0, col = "darkorange2", lwd = 2)
# Add a label to the horizontal line
text(2000, -0.1, "1951-1980 average")
# Set line width and colour
plot(tempdata$Jan, type = "l", col = "blue", lwd = 2,
ylab = "Annual temperature anomalies", xlab = "Year")
# Add a title
title("Average temperature anomaly in January in the northern hemisphere (1880-2016)")
# Add a horizontal line (at y = 0)
abline(h = 0, col = "darkorange2", lwd = 4)
# Add a label to the horizontal line
text(2000, -0.1, "1951-1980 average")
# Set line width and colour
plot(tempdata$Jan, type = "l", col = "blue", lwd = 2,
ylab = "Annual temperature anomalies", xlab = "Year")
# Add a title
title("Average temperature anomaly in January in the northern hemisphere (1880-2016)")
# Add a horizontal line (at y = 0)
abline(h = 0, col = "darkorange2", lwd = 4)
# Add a label to the horizontal line
text(2000, -0.3, "1951-1980 average")
# Set line width and colour
plot(tempdata$Jan, type = "l", col = "blue", lwd = 2,
ylab = "Annual temperature anomalies", xlab = "Year")
# Add a title
title("Average temperature anomaly in January in the northern hemisphere (1880-2016)")
# Add a horizontal line (at y = 0)
abline(h = 0, col = "darkorange2", lwd = 4)
# Add a label to the horizontal line
text(2000, -0.2, "1951-1980 average")
# Set line width and colour
plot(tempdata$J.D, type = "l", col = "blue", lwd = 2,
ylab = "Annual temperature anomalies", xlab = "Year")
# \n creates a line break
title("Average annual temperature anomaly \n in the northern hemisphere (1880-2016)")
# Add a horizontal line (at y = 0)
abline(h = 0, col = "darkorange2", lwd = 2)
# Add a label to the horizontal line
text(2000, -0.1, "1951-1980 average")
tempdata$Period <-
factor(NA, levels =
c("1921-1950", "1951-1980", "1981-2010"),
ordered = TRUE)
tempdata$Period[(tempdata$Year > 1920) &
(tempdata$Year < 1951)] <- "1921-1950"
tempdata$Period[(tempdata$Year > 1950) &
(tempdata$Year < 1981)] <- "1951-1980"
tempdata$Period[(tempdata$Year > 1980) &
(tempdata$Year < 2011)] <- "1981-2010"
# Combine the temperature data for June, July, and August
temp_summer <- c(tempdata$Jun, tempdata$Jul, tempdata$Aug)
# Combine the temperature data for June, July, and August
temp_summer <- c(tempdata$Jun, tempdata$Jul, tempdata$Aug)
tempdata$Period[(tempdata$Year > 1920) &
(tempdata$Year < 1951)] <- "1921-1950"
tempdata$Period[(tempdata$Year > 1950) &
(tempdata$Year < 1981)] <- "1951-1980"
tempdata$Period[(tempdata$Year > 1980) &
(tempdata$Year < 2011)] <- "1981-2010"
# Combine the temperature data for June, July, and August
temp_summer <- c(tempdata$Jun, tempdata$Jul, tempdata$Aug)
temp_summer
temp_summer <- unlist(tempdata[,7:9],use.names = FALSE)
# Mirror the Period information for temp_sum
temp_Period <-
c(tempdata$Period, tempdata$Period, tempdata$Period)
# Repopulate the factor information
temp_Period <- factor(temp_Period,
levels = 1:nlevels(tempdata$Period),
labels = levels(tempdata$Period))
hist(temp_summer[(temp_Period == "1951-1980")],
plot = FALSE)
hist(temp_summer[(temp_Period == "1951-1980")],
plot = TRUE)
hist(temp_summer[(temp_Period == "1951-1980")],
plot = FALSE)
# Load the library we use for the following command.
library(mosaic)
install.packages(mosaic)
library(mosaic)
# Load the library we use for the following command.
library(mosaic)
install.packages("mosaic")
# Load the library we use for the following command.
library(mosaic)
histogram(~ temp_summer | temp_Period, type = "count",
breaks = seq(-0.5, 1.3, 0.10),
main = "Histogram of Temperature anomalies",
xlab = "Summer temperature distribution")
# Select years 1951 to 1980
temp_all_months <- subset(tempdata,
(Year >= 1951 & Year <= 1980))
# Columns 2 to 13 contain months Jan to Dec.
temp_51to80 <- unlist(temp_all_months[, 2:13])
# c(0.3, 0.7) indicates the chosen percentiles.
perc <- quantile(temp_51to80, c(0.3, 0.7))
# The cold threshold
p30 <- perc[1]
p30
# The hot threshold
p70 <- perc[2]
p70
# Select years 1951 to 1980
temp_all_months <- subset(tempdata,
(Year >= 1981 & Year <= 2010))
# Columns 2 to 13 contain months Jan to Dec.
temp_81to10 <- unlist(temp_all_months[, 2:13])
paste("Proportion smaller than p30")
temp <- temp_81to10 < p30
mean(temp)
paste("Proportion larger than p70")
mean(temp_81to10 > p70)
mean(~DJF|Period,data = tempdata)
paste("Variance of DJF anomalies across periods")
var(~DJF|Period,data = tempdata)
paste("Variance of MAM anomalies across periods")
paste("Variance of MAM anomalies across periods")
plot(tempdata$DJF, type = "l", col = "blue", lwd = 2,
ylab = "Annual temperature anomalies", xlab = "Year")
# \n creates a line break
title("Average temperature anomaly in DJF and JJA \n in the northern hemisphere (1880-2016)")
# Add a horizontal line (at y = 0)
abline(h = 0, col = "darkorange2", lwd = 2)
lines(tempdata$JJA, col = "darkgreen", lwd = 2)
# Add a label to the horizontal line
text(1895, 0.1, "1951-1980 average")
legend(1880, 1.5, legend = c("DJF", "JJA"),
col = c("blue", "darkgreen"),
lty = 1, cex = 0.8, lwd = 2)
CO2data <- read.csv("1_CO2 data.csv")
blogdown::serve_site()
blogdown::(serve_site)
blogdown::serve_site()
blogdown::serve_site()
viridisLite::viridis(8, option = "plasma", begin = 0.1, end = 0.9)
hugo server
serverSocket()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(scholar)
install.packages("scholar")
install.packages("networkDynamic")
install.packages("ndtv")
install.packages("igraph")
install.packages("statnet")
install.packages("intergraph")
install.packages("visNetwork")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
viridisLite::viridis(8, option = "plasma", begin = 0.1, end = 0.9)
viridisLite::viridis(6, option = "plasma", begin = 0.1, end = 0.9)
?viridisLite::viridis
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
# using code from RColorBrewer to demo the palette
n = 200
?viridisLite::viridis
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
library(viridis)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(256, option = "D"))
# using code from RColorBrewer to demo the palette
n = 200
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(256, option = "D"))
# using code from RColorBrewer to demo the palette
n = 200
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(8, option = "D"))
# using code from RColorBrewer to demo the palette
n = 200
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(8, option = "plasma"))
r
# using code from RColorBrewer to demo the palette
n = 200
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(6, option = "plasma"))
r
# using code from RColorBrewer to demo the palette
n = 200
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(6, option = "plasma"))
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(256, option = "plasma"))
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(2, option = "plasma"))
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(4, option = "plasma"))
r
library(ggplot2)
library(hexbin)
library(viridis)
dat <- data.frame(x = rnorm(10000), y = rnorm(10000))
r <-ggplot(dat, aes(x = x, y = y)) +
geom_hex() + coord_fixed() +
scale_fill_gradientn(colours = viridis(4, option = "mako"))
r
library(metbrewer)
install.packages("metbrewer")
y
install.packages("MetBrewer")
library(metbrewer)
library(MetBrewer)
met.brewer(name="VanGogh1",n=7,type="discrete")
library(MetBrewer)
met.brewer(name="VanGogh1",n=7,type="discrete")
viridis(6,option = "Plasma" type = "discrete")
library(MetBrewer)
met.brewer(name="VanGogh1",n=7,type="discrete")
viridis(6,option = "Plasma", type = "discrete")
library(MetBrewer)
met.brewer(name="VanGogh1",n=7,type="discrete")
library(MetBrewer)
met.brewer(name="Veronese",n=7,type="discrete")
library(MetBrewer)
met.brewer(name="Veronese",n=4,type="discrete")
library(MetBrewer)
met.brewer(name="Veronese",n=10,type="discrete")
library(MetBrewer)
met.brewer(name="Veronese",n=8,type="discrete")
library(MetBrewer)
met.brewer(name="Veronese",n=3,type="discrete")
library(MetBrewer)
met.brewer(name="Veronese",n=5,type="discrete")
?met.brewer()
?viridisLite
??viridisLite
viridisLite::viridis(8, option = "plasma", begin = 0.1, end = 0.9)
library(viridis)
blogdown::stop_server()
blogdown::serve_site()
$colors
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
?serve_site
blogdown::stop_server()
blogdown::serve_site()
themes
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
viridisLite::viridis(8, option = "plasma", begin = 0.1, end = 0.9)
viridisLite::viridis(6, option = "plasma", begin = 0.1, end = 0.9)
?viridis
viridisLite::viridis(6, option = "make", begin = 0.1, end = 0.9)
viridisLite::viridis(6, option = "mako", begin = 0.1, end = 0.9)
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
